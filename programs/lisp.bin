v2.0 raw
#j
# init
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jal
# r0, init
#.constant
# OutPort, 0xFF000000
#.constant
# InPort, 0xFF000001
#.constant
# CharReady, 0xFF000002
#.constant
# CAR, 0
#.constant
# CDR, 4
#.constant
# MIGRATED, 14
#.constant
# TYPE, 15
#.constant
# heap_start, 0x100000
#.constant
# heap_split, 0x180000
#.constant
# TYPE_PAIR, 0
#.constant
# TYPE_INT, 1
#.constant
# TYPE_ID, 2
#.constant
# TYPE_FUNCTION, 3
######### to_space:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### from_space:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### next:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### scan:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### oblist:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### global:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### nil:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### t:
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### init:
#li
# sp, 0x00300000
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# sp, 0x00300000
#ori
# sp, sp, 0x00300000
#li
# t0, heap_start
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# t0, heap_start
#ori
# t0, t0, heap_start
#sw
# zero, t0, 'from_space
#sw
# zero, t0, 'next
#li
# t0, heap_split
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# t0, heap_split
#ori
# t0, t0, heap_split
#sw
# zero, t0, 'to_space
#jal
# ra, new_pair
#mv
# s0, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# s0, a0, 0
#li
# a0, 'nil_str
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# a0, 'nil_str
#ori
# a0, a0, 'nil_str
#jal
# ra, new_id
#mv
# s1, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# s1, a0, 0
#sw
# zero, a0, 'nil
#sw
# s0, s1, CAR
#sw
# s0, s1, CDR
#.word
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
#.half
# 0
#.byte
# 0
#.byte
# 0
######### new_cell:
#lw
# t0, zero, 'next
#sb
# t0, a0, TYPE
#mv
# a0, t0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# a0, t0, 0
#addi
# t0, a0, 16
#sw
# zero, t0, 'next
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### new_pair:
#sw
# sp, ra, -4
#addi
# sp, sp, -4
#li
# a0, TYPE_PAIR
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# a0, TYPE_PAIR
#ori
# a0, a0, TYPE_PAIR
#jal
# ra, new_cell
#lw
# ra, sp, 0
#addi
# sp, sp, 4
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### new_int:
#sw
# sp, ra, -4
#addi
# sp, sp, -4
#li
# a0, TYPE_INT
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# a0, TYPE_INT
#ori
# a0, a0, TYPE_INT
#jal
# ra, new_cell
#lw
# ra, sp, 0
#addi
# sp, sp, 4
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### new_id:
#sw
# sp, ra, -4
#sw
# sp, s0, -8
#sw
# sp, s1, -12
#addi
# sp, sp, -12
#mv
# s0, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# s0, a0, 0
#li
# a0, TYPE_ID
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# a0, TYPE_ID
#ori
# a0, a0, TYPE_ID
#jal
# ra, new_cell
#mv
# s1, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# s1, a0, 0
#mv
# a1, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# a1, a0, 0
#mv
# a0, s0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# a0, s0, 0
#jal
# ra, strcpy
#mv
# a0, s1
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# a0, s1, 0
#lw
# s1, sp, 0
#lw
# s0, sp, 4
#lw
# ra, sp, 8
#addi
# sp, sp, 12
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### gc:
#sw
# sp, ra, -4
#sw
# sp, s0, -8
#addi
# sp, sp, -8
#lw
# t0, zero, 'to_space
#sw
# zero, t0, 'scan
#sw
# zero, t0, 'next
#lw
# a0, zero, 'oblist
#jal
# ra, migrate
#sw
# zero, a0, 'oblist
######### gc_loop:
#lw
# t0, zero, 'scan
#lb
# t1, t0, TYPE
#addi
# t2, zero, TYPE_PAIR
#bne
# t1, t2, gc_next_cell
#mv
# s0, t0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# s0, t0, 0
#lw
# a0, s0, CAR
#jal
# ra, migrate
#sw
# s0, a0, CAR
#lw
# a0, s0, CDR
#jal
# ra, migrate
#sw
# s0, a0, CDR
######### gc_next_cell:
#lw
# t0, zero, 'next
#lw
# t1, zero, 'scan
#bne
# t0, t1, gc_loop
#lw
# t0, zero, 'to_space
#lw
# t1, zero, 'from_space
#sw
# t0, zero, 'from_space
#sw
# t1, zero, 'to_space
#lw
# s0, sp, 0
#lw
# ra, sp, 4
#addi
# sp, sp, 8
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### migrate:
#lb
# t0, a0, MIGRATED
#beqz
# t0, do_migrate
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#beq
# t0, r0, do_migrate
#lw
# a0, a0, CAR
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### do_migrate:
#lw
# t0, zero, 'next
#lw
# t1, a0, 0
#sw
# t0, t1, 0
#lw
# t1, a0, 1
#sw
# t0, t1, 1
#lw
# t1, a0, 2
#sw
# t0, t1, 2
#lw
# t1, a0, 3
#sw
# t0, t1, 3
#sw
# a0, t0, CAR
#li
# t3, 1
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# t3, 1
#ori
# t3, t3, 1
#sb
# a0, t3, MIGRATED
#addi
# t0, t0, 4
#sw
# zero, t0, 'next
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### intern:
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### print:
#sw
# sp, ra, -4
#addi
# sp, sp, -4
#lb
# t0, a0, TYPE
#addi
# t1, zero, TYPE_PAIR
#beq
# t0, t1, print_pair
#addi
# t1, zero, TYPE_INT
#beq
# t0, t1, print_int
#addi
# t1, zero, TYPE_ID
#beq
# t0, t1, print_id
#addi
# t1, zero, TYPE_FUNCTION
#beq
# t0, t1, print_function
#j
# print_end
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jal
# r0, print_end
######### print_pair:
#j
# print_end
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jal
# r0, print_end
######### print_int:
#j
# print_end
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jal
# r0, print_end
######### print_id:
#jal
# ra, out_string
#j
# print_end
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jal
# r0, print_end
######### print_function:
######### print_end:
#lb
# sp, ra, 0
#addi
# sp, sp, 4
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### strcpy:
#lb
# t0, a0, 0
#beqz
# t0, strcpy_end
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#beq
# t0, r0, strcpy_end
#sb
# a1, t0, 0
#addi
# a0, a0, 1
#addi
# a1, a1, 1
#beq
# zero, zero, strcpy
######### strcpy_end:
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### strcmp:
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### out_char:
#li
# t0, OutPort
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# t0, OutPort
#ori
# t0, t0, OutPort
#sb
# t0, a0, 0
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### out_hex:
#li
# t3, 'HexTable
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# t3, 'HexTable
#ori
# t3, t3, 'HexTable
#mv
# t5, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# t5, a0, 0
#sw
# sp, ra, -4
#addi
# sp, sp, -4
######### out_hex_character:
#addi
# a1, a1, -1
#slli
# t2, a1, 2
#srl
# t4, t5, t2
#andi
# t4, t4, 0xF
#add
# t4, t4, t3
#lb
# a0, t4, 0
#jal
# ra, out_char
#bne
# a1, zero, out_hex_character
######### out_hex_end:
#lw
# ra, sp, 0
#addi
# sp, sp, 4
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### out_string:
#sw
# sp, ra, -4
#addi
# sp, sp, -4
#mv
# t1, a0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# t1, a0, 0
######### out_string_charloop:
#lb
# t2, t1, 0
#beqz
# t2, out_string_end
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#beq
# t2, r0, out_string_end
#mv
# a0, t2
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#addi
# a0, t2, 0
#jal
# ra, out_char
#addi
# t1, t1, 1
#j
# out_string_charloop
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jal
# r0, out_string_charloop
######### out_string_end:
#lw
# ra, sp, 0
#addi
# sp, sp, 4
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### newline:
#sw
# sp, ra, -4
#addi
# sp, sp, -4
#li
# a0, 10
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#lui
# a0, 10
#ori
# a0, a0, 10
#jal
# ra, out_char
#lw
# ra, sp, 0
#addi
# sp, sp, 4
#ret
# 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#jalr
# r0, r1, 0
######### HexTable:
#.stringu
# "0123456789ABCDEF"
#.byte
# 48
#.byte
# 49
#.byte
# 50
#.byte
# 51
#.byte
# 52
#.byte
# 53
#.byte
# 54
#.byte
# 55
#.byte
# 56
#.byte
# 57
#.byte
# 65
#.byte
# 66
#.byte
# 67
#.byte
# 68
#.byte
# 69
#.byte
# 70
######### nil_str:
#.string
# "NIL"
#.stringu
# "NIL"
#.byte
# 78
#.byte
# 73
#.byte
# 76
#.byte
# 0
######### t_str:
#.string
# "T"
#.stringu
# "T"
#.byte
# 84
#.byte
# 0
######### oblist_str:
#.string
# "OBLIST"
#.stringu
# "OBLIST"
#.byte
# 79
#.byte
# 66
#.byte
# 76
#.byte
# 73
#.byte
# 83
#.byte
# 84
#.byte
# 0
# 0,36
# 4278190080
# 4278190081
# 4278190082
# 0
# 4
# 14
# 15
# 1048576
# 1572864
# 0
# 1
# 2
# 3
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 0
# 2,3145728
# 2,2,3145728
# 5,1048576
# 5,5,1048576
# 0,5,8
# 0,5,12
# 5,1572864
# 5,5,1572864
# 0,5,4
# 1,64
# 8,10,0
# 10,764
# 10,10,764
# 1,112
# 9,10,0
# 0,10,28
# 8,9,0
# 8,9,4
# 0
# 0
# 0
# 0
# 5,0,12
# 5,10,15
# 10,5,0
# 5,10,16
# 0,5,12
# 0,1,0
# 2,1,-4
# 2,2,-4
# 10,0
# 10,10,0
# 1,-40
# 1,2,0
# 2,2,4
# 0,1,0
# 2,1,-4
# 2,2,-4
# 10,1
# 10,10,1
# 1,-72
# 1,2,0
# 2,2,4
# 0,1,0
# 2,1,-4
# 2,8,-8
# 2,9,-12
# 2,2,-12
# 8,10,0
# 10,2
# 10,10,2
# 1,-116
# 9,10,0
# 11,10,0
# 10,8,0
# 1,312
# 10,9,0
# 9,2,0
# 8,2,4
# 1,2,8
# 2,2,12
# 0,1,0
# 2,1,-4
# 2,8,-8
# 2,2,-8
# 5,0,4
# 0,5,16
# 0,5,12
# 10,0,20
# 1,96
# 0,10,20
# 5,0,16
# 6,5,15
# 7,0,0
# 6,7,32
# 8,5,0
# 10,8,0
# 1,64
# 8,10,0
# 10,8,4
# 1,52
# 8,10,4
# 5,0,12
# 6,0,16
# 5,6,-52
# 5,0,4
# 6,0,8
# 5,0,8
# 6,0,4
# 8,2,0
# 1,2,4
# 2,2,8
# 0,1,0
# 5,10,14
# 5,0,12
# 10,10,0
# 0,1,0
# 5,0,12
# 6,10,0
# 5,6,0
# 6,10,1
# 5,6,1
# 6,10,2
# 5,6,2
# 6,10,3
# 5,6,3
# 10,5,0
# 28,1
# 28,28,1
# 10,28,14
# 5,5,4
# 0,5,12
# 0,1,0
# 0,1,0
# 2,1,-4
# 2,2,-4
# 5,10,15
# 6,0,0
# 5,6,32
# 6,0,1
# 5,6,28
# 6,0,2
# 5,6,24
# 6,0,3
# 5,6,24
# 0,20
# 0,16
# 0,12
# 1,132
# 0,4
# 2,1,0
# 2,2,4
# 0,1,0
# 5,10,0
# 5,0,20
# 11,5,0
# 10,10,1
# 11,11,1
# 0,0,-20
# 0,1,0
# 0,1,0
# 5,4278190080
# 5,5,4278190080
# 5,10,0
# 0,1,0
# 28,748
# 28,28,748
# 30,10,0
# 2,1,-4
# 2,2,-4
# 11,11,-1
# 7,11,2
# 29,30,7
# 29,29,15
# 29,29,28
# 10,29,0
# 1,-60
# 11,0,-28
# 1,2,0
# 2,2,4
# 0,1,0
# 2,1,-4
# 2,2,-4
# 6,10,0
# 7,6,0
# 7,0,20
# 10,7,0
# 1,-104
# 6,6,1
# 0,-20
# 1,2,0
# 2,2,4
# 0,1,0
# 2,1,-4
# 2,2,-4
# 10,10
# 10,10,10
# 1,-144
# 1,2,0
# 2,2,4
# 0,1,0
# 48
# 49
# 50
# 51
# 52
# 53
# 54
# 55
# 56
# 57
# 65
# 66
# 67
# 68
# 69
# 70
# 78
# 73
# 76
# 0
# 84
# 0
# 79
# 66
# 76
# 73
# 83
# 84
# 0
6f
00
40
2
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
37
1
30
00
13
61
1
00
b7
2
10
00
93
e2
2
00
23
24
50
00
23
26
50
00
b7
2
18
00
93
e2
2
00
23
22
50
00
ef
00
00
4
13
4
5
00
37
5
00
00
13
65
c5
2f
ef
00
00
7
93
4
5
00
23
2e
a0
00
23
20
94
00
23
22
94
00
00
00
00
00
83
22
c0
00
a3
87
a2
00
13
85
2
00
93
2
5
1
23
26
50
00
67
80
00
00
23
2e
11
fe
13
1
c1
ff
37
5
00
00
13
65
5
00
ef
f0
9f
fd
83
20
1
00
13
1
41
00
67
80
00
00
23
2e
11
fe
13
1
c1
ff
37
5
00
00
13
65
15
00
ef
f0
9f
fb
83
20
1
00
13
1
41
00
67
80
00
00
23
2e
11
fe
23
2c
81
fe
23
2a
91
fe
13
1
41
ff
13
4
5
00
37
5
00
00
13
65
25
00
ef
f0
df
f8
93
4
5
00
93
5
5
00
13
5
4
00
ef
00
80
13
13
85
4
00
83
24
1
00
3
24
41
00
83
20
81
00
13
1
c1
00
67
80
00
00
23
2e
11
fe
23
2c
81
fe
13
1
81
ff
83
22
40
00
23
28
50
00
23
26
50
00
3
25
40
1
ef
00
00
6
23
2a
a0
00
83
22
00
1
3
83
f2
00
93
3
00
00
63
10
73
2
13
84
2
00
3
25
4
00
ef
00
00
4
23
20
a4
00
3
25
44
00
ef
00
40
3
23
22
a4
00
83
22
c0
00
3
23
00
1
e3
96
62
fc
83
22
40
00
3
23
80
00
23
a4
2
00
23
22
3
00
3
24
1
00
83
20
41
00
13
1
81
00
67
80
00
00
83
2
e5
00
63
86
2
00
3
25
5
00
67
80
00
00
83
22
c0
00
3
23
5
00
23
a0
62
00
3
23
15
00
a3
a0
62
00
3
23
25
00
23
a1
62
00
3
23
35
00
a3
a1
62
00
23
20
55
00
37
e
00
00
13
6e
1e
00
23
7
c5
1
93
82
42
00
23
26
50
00
67
80
00
00
67
80
00
00
23
2e
11
fe
13
1
c1
ff
83
2
f5
00
13
3
00
00
63
80
62
2
13
3
10
00
63
8e
62
00
13
3
20
00
63
8c
62
00
13
3
30
00
63
8c
62
00
6f
00
40
1
6f
00
00
1
6f
00
c0
00
ef
00
40
8
6f
00
40
00
3
81
00
00
13
1
41
00
67
80
00
00
83
2
5
00
63
8a
2
00
23
80
55
00
13
5
15
00
93
85
15
00
e3
6
00
fe
67
80
00
00
67
80
00
00
b7
2
00
ff
93
e2
2
00
23
80
a2
00
67
80
00
00
37
e
00
00
13
6e
ce
2e
13
f
5
00
23
2e
11
fe
13
1
c1
ff
93
85
f5
ff
93
93
25
00
b3
5e
7f
00
93
fe
fe
00
b3
8e
ce
1
3
85
e
00
ef
f0
5f
fc
e3
92
5
fe
83
20
1
00
13
1
41
00
67
80
00
00
23
2e
11
fe
13
1
c1
ff
13
3
5
00
83
3
3
00
63
8a
3
00
13
85
3
00
ef
f0
9f
f9
13
3
13
00
6f
f0
df
fe
83
20
1
00
13
1
41
00
67
80
00
00
23
2e
11
fe
13
1
c1
ff
37
5
00
00
13
65
a5
00
ef
f0
1f
f7
83
20
1
00
13
1
41
00
67
80
00
00
30
31
32
33
34
35
36
37
38
39
41
42
43
44
45
46
4e
49
4c
00
54
00
4f
42
4c
49
53
54
00
